<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小马哥</title>
  
  <subtitle>因为到过地狱才知道天堂的美好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursiteoi.com/"/>
  <updated>2019-12-22T11:04:37.380Z</updated>
  <id>http://yoursiteoi.com/</id>
  
  <author>
    <name>2m雨天</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>指令18号</title>
    <link href="http://yoursiteoi.com/2019/12/22/%E6%8C%87%E4%BB%A418%E5%8F%B7/"/>
    <id>http://yoursiteoi.com/2019/12/22/%E6%8C%87%E4%BB%A418%E5%8F%B7/</id>
    <published>2019-12-22T10:39:11.685Z</published>
    <updated>2019-12-22T11:04:37.380Z</updated>
    
    <content type="html"><![CDATA[<h2 id="a1-日常指令"><a href="#a1-日常指令" class="headerlink" title="a1.日常指令"></a>a1.日常指令</h2><h5 id="1-cd指令-进入文件夹"><a href="#1-cd指令-进入文件夹" class="headerlink" title="1.cd指令   -  进入文件夹"></a>1.cd指令   -  进入文件夹</h5><p>cd  文件夹路径(路径可以是绝对地址也可以是相对地址)      -  进入到指定路径对应的文件夹</p><p>cd  ..              -   返回上层目录</p><p>cd  /               -  进入操作系统根目录</p><p>cd ~               -  进入电脑的文件系统根目录</p><!-- --><h5 id="2-ls指令-显示当前目录中的内容"><a href="#2-ls指令-显示当前目录中的内容" class="headerlink" title="2.ls指令   - 显示当前目录中的内容"></a>2.ls指令   - 显示当前目录中的内容</h5><p>ls                  -   直接显示当前文件夹中的内容的名字(隐藏文件和文件夹看不到)</p><p>ls   -l/-lh      -   显示当前文件夹中的内容和内容的基本信息(隐藏文件和文件夹看不到)</p><p>ls   -a           -   显示当前文件夹中所有的内容(包括隐藏文件)</p><p>ls  -R            -  递归显示当前目录以及当前目录下所有的子目录中的内容</p><p>ls   -r            -  内容倒序显示</p><p>ls  -S/-t        -   显示文件夹中的内容，并且内容按大小/时间从大到小排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls  -Sr     -   按大小从小到大排序</span><br><span class="line">ls  -Srlh   -   按大小从小到大排序,并且显示内容的基本信息</span><br></pre></td></tr></table></figure><h5 id="3-pwd指令"><a href="#3-pwd指令" class="headerlink" title="3. pwd指令"></a>3. pwd指令</h5><p>pwd             -   查看当前目录的绝对路径(系统目录下的)</p><h5 id="4-文件操作"><a href="#4-文件操作" class="headerlink" title="4.文件操作"></a>4.文件操作</h5><p>1）touch指令      -   新建文件</p><p>touch   文件路径         -  在指定位置创建指定文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch a.txt      - 在当前目录下新建一个文件a.txt</span><br><span class="line">touch ..&#x2F;a.txt   - 在当前目录的上层目录新建一个文件a.txt</span><br><span class="line">touch &#x2F;home&#x2F;a&#x2F;a.txt     -  在根目录下home目录中的a目录里面创建一个文件a.txt</span><br></pre></td></tr></table></figure><p>2) cat指令         -     查看文件内容(读文件)</p><p>cat    文件路径             -  读取指定路径对应的文件的内容</p><p>3) vim指令   </p><p>vim   文件路径            -  使用vim打开文件</p><p>#####5.文件夹操作</p><p>1) mkdir指令           -   新建文件夹</p><p>mkdir  文件夹路径       -   在指定位置创建文件夹</p><p>mkdir  -p  文件夹路径     -  在指定位置创建文件夹(会创建目录中所有不存在的文件夹)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p  a&#x2F;b&#x2F;c     - a,b,c可以都没有，会在当前目录中创建a,在a中创建b，b中创建c</span><br><span class="line">mkdir -p  a&#x2F;&#123;b,c&#125;   - a,b,c可以都没有，会在当前目录中创建a,在a中创建b和c</span><br></pre></td></tr></table></figure><h5 id="6-删除文件和文件夹"><a href="#6-删除文件和文件夹" class="headerlink" title="6.删除文件和文件夹"></a>6.删除文件和文件夹</h5><p>1)rm指令       -    删除文件和文件夹</p><p>rm   文件路径            -  删除指定文件(删除的时候会循环是否确定删除，y-同意， n-不同意)</p><p>rm  -f  文件路径        -  删除指定文件（删除的时候不询问）</p><p>rm  -r  文件夹路径    -  删除指定文件夹</p><p>2) rmdir指令      -    删除空目录</p><p>rmdir  文件夹路径       -   删除指定文件夹(这个文件夹必须是空的)</p><p>3)cp指令           -      拷贝</p><p>cp 文件路径1  文件路径2        - 将文件路径1指定的文件中的内容复制到文件路径2指定的文件中(文件路径2对应的                                        文件本身是不存在) </p><p>​                          - 将文件1中的内容复制粘贴到文件2(如果文件2不存，会自动创建；如果存在会询问                             是否覆盖)</p><p>cp   文件路径    文件夹路径      -  将指定文件复制粘贴到指定文件夹中</p><p>cp  -r  文件夹路径1  文件夹路径2    - 将文件夹1复制粘贴到文件夹2中</p><p>4)mv指令       -  移动</p><p>mv   文件路径1   文件路径2       -  将文件1移动文件2所在的位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv  文件名1  文件名2     -  对文件进行重命名(将文件名1修改为文件名2)</span><br><span class="line">mv  a.txt   b.txt      -  将当前文件夹中的a.txt重命名为b.txt</span><br><span class="line">mv  &#x2F;home&#x2F;a.txt  &#x2F;home&#x2F;b.txt    -  将系统根目录下home文件中的a.txt重命名为b.txt</span><br></pre></td></tr></table></figure><p>mv   文件路径   文件夹路径           -  将文件直接移动到指定文件夹中</p><p>mv   文件夹路径1  文件夹路径2     -  将文件夹1移动到文件夹2中</p><h5 id="7-history指令-获取历史记录-指令的历史记录"><a href="#7-history指令-获取历史记录-指令的历史记录" class="headerlink" title="7.history指令    -  获取历史记录(指令的历史记录)"></a>7.history指令    -  获取历史记录(指令的历史记录)</h5><p>history     -  显示当前系统已经执行过的所有的指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">如果想要显示历史记录的时候显示指令执行的时间需要修改~/.bashrc文件:</span></span><br><span class="line">export  HISTTIMEFORMAT="[%y‐%m‐%d_%T] " </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改完成后需要通过指令: <span class="built_in">source</span> ~/.bashrc 去执行这个配置文件， 最后历史记录的时间才会生效</span></span><br></pre></td></tr></table></figure><h5 id="8-创建连接"><a href="#8-创建连接" class="headerlink" title="8. 创建连接"></a>8. 创建连接</h5><h6 id="1-创建软连接（掌握-）"><a href="#1-创建软连接（掌握-）" class="headerlink" title="1)创建软连接（掌握!）"></a>1)创建软连接（掌握!）</h6><p>ln -s  源文件路径  软连接文件地址     - 给源文件在指定位置创建一个软连接(软连接本质就是用来保存源文件绝对                                地址的一个文件， 可以理解为windows中的快捷方式)</p><p>​                                 注意: 源文件路径必须写绝对路径</p><p>​                                如果删除或者移动源文件，软连接会直接无效</p><p>######2)创建硬链接</p><p>ln  源文件路径  硬连接文件地址      -    给源文件在指定位置创建一个硬链接</p><p>​                                硬链接的本质就是源文件内容的另外一个引用，所以删除或者移动源文件硬                                        链接仍然有效，只是删除硬链接会变成普通文件</p><h5 id="9-进程相关指令"><a href="#9-进程相关指令" class="headerlink" title="9.进程相关指令"></a>9.进程相关指令</h5><h6 id="1-ps指令"><a href="#1-ps指令" class="headerlink" title="1) ps指令"></a>1) ps指令</h6><p>ps                 - 查看进程状态</p><p>ps -aux         - 查看当前所有的进程的信息</p><p>ps  grep 进程名/进程ID     -  根据进程名/进程ID查看指定进程</p><h6 id="2-top指令"><a href="#2-top指令" class="headerlink" title="2)top指令"></a>2)top指令</h6><p>top           -    实时查看当前所有的进程信息和系统信息</p><p>top -p  PID1,PID2,….     - 实时监测指定的进程</p><h6 id="3-free指令"><a href="#3-free指令" class="headerlink" title="3)free指令"></a>3)free指令</h6><p>free      -   显示当前系统的内存信息，显示的时候以kb为单位</p><p>free  -单位    - 显示当前系统的内存信息，以指定单位来显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -m    - 显示当前系统的内存信息，以Mb为单位</span><br></pre></td></tr></table></figure><h6 id="4-kill指令"><a href="#4-kill指令" class="headerlink" title="4)kill指令"></a>4)kill指令</h6><p>kill 进程ID       -  杀掉指定id对应的进程</p><p>kill -1/-9/-15 进程ID      -  以指定的方式(-1表示不间断重启; -9表示强制杀死进程；-15表示正常结束进程)杀掉指定                                   进程</p><p>pkill  进程名      - 杀死指定进程名对应的进程(中间可以加-1/-9/-15)</p><p>killall   进程名    - 杀死和进程名相关的所有进程</p><h6 id="5-uptime"><a href="#5-uptime" class="headerlink" title="5)uptime"></a>5)uptime</h6><p>uptime     -  获取系统信息</p><h5 id="10-用户管理"><a href="#10-用户管理" class="headerlink" title="10.用户管理"></a>10.用户管理</h5><p>一个Linux操作系统可以有多个用户(user)，也可以有多个用户组(group); 用户和用户组之间的关系是多对多</p><p>users    -   查看当前用户</p><p>groups   -  查看当前分组</p><p>groupadd  分组名       -  创建分组(管理员才能创建; 可以通过查看/etc/group文件来查看当前系统所有的分组)</p><p>useradd  用户名          - 创建指定用户(1.用户创建成功后系统会自动在/home目录下创建一个和用户名同名的文件                    夹；2.会自动创建和用户名同名的分组，并且将当前用户添加到这个分组中)</p><p>useradd -G  分组1,分组2,…   用户名    -  创建指定用户，并且将用户添加到指定分组中</p><p>usermod -G  分组1,分组2  用户名       -  修改用户分组</p><p>password 用户名         -  修改用户密码(需要root权限)</p><p>su 用户名        -  切换账号(root登录的时候切换不需要密码，其他账号需要)</p><p>exit             -    退出当前账号</p><p>sudo           -  在命令前sudo是以管理员身份执行指令</p><p>注意:      不是所有的用户都可以通过sudo来以管理员身份执行指令，如果想要能够使用sudo必须添加配置    </p><p>​        a.ubuntu:  将需要有管理员身份的账号添加到sudo分组中</p><p>​        b.redhat和contos: 在/etc/sudoers配置文件中添加代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Allow root to run any commands anywhere</span></span></span><br><span class="line">root    ALL=(ALL)       ALL     #(默认有的)</span><br><span class="line">xiaoming ALL=(ALL)      ALL#(自己添加的，xiaoming是用户名)</span><br></pre></td></tr></table></figure><h5 id="11-文件权限"><a href="#11-文件权限" class="headerlink" title="11.文件权限"></a>11.文件权限</h5><table><thead><tr><th>文件类型</th><th>所有者权限</th><th>同组用户权限</th><th>其他用户权限</th></tr></thead><tbody><tr><td>d（目录）</td><td></td><td></td><td></td></tr><tr><td>-（文件）</td><td></td><td></td><td></td></tr><tr><td>l（连接）</td><td></td><td></td><td></td></tr></tbody></table><p>默认情况下文件和文件夹的权限: 文件所有者有读写权限， 同组用户和其他用户都是只读权限。</p><p>######1）chmod指令</p><p>chmod 权限值   文件路径        - 将指定文件的权限修改成指定值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">权限：     rwx r-- rw-</span><br><span class="line">权限二进制：111 100 110  </span><br><span class="line">权限值:    7   4   6</span><br><span class="line">chmod 746 文件路径</span><br><span class="line"></span><br><span class="line">权限:     rwx rwx rwx</span><br><span class="line">权限值:    7    7  7</span><br><span class="line">chmod 777 文件路径</span><br></pre></td></tr></table></figure><p>chmod  [a,u,g,o]/[+-]/[r,w,x]  文件地址      - 给指定文件对应指定用户添加或者删除指定权限</p><p>​                                                                         (a-所有用户，u-文件所有者,g-同组用户,o-其他用户；</p><p>​                                      +表示添加权限， -表示删除权限;</p><p>​                                      r-表示读权限, w表示写权限,x表示执行权限)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a-x 文件地址     #  删除所有用户的执行权限</span><br><span class="line">chmod u+w  文件地址    #  给文件所有者添加写的权限</span><br></pre></td></tr></table></figure><h5 id="12-日志管理"><a href="#12-日志管理" class="headerlink" title="12.日志管理"></a>12.日志管理</h5><p>######1)显示文件内容</p><p>a.cat指令   -  直接显示文件中所有的内容</p><p>cat 文件    -  直接查看文件所有内容</p><p>总结: 查看文件内容的时候可以加参数-n，让内容在显示的时候显示行号</p><p>b.查看部分内容</p><p>head   N  文件地址    - 显示指定文件前N行内容(-n参数无效)</p><p>tail    N  文件地址       -  显示指定文件最后N行内容(-n参数无效)</p><p>c.分页显示</p><p>less  文件       -  按页显示文件内容(通过快捷键控制内容显示过程； 文件内容不会打印到shell/终端里)</p><p>less  -N 文件   -  按页显示文件内容，每次翻页的时候翻N行</p><p>more  文件      - 按页显示文件内容(通过快捷键控制内容显示过程； 文件内容会打印到shell/终端里)</p><p>more  -N 文件   -  按页显示文件内容，每次翻页的时候翻N行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">快捷键:</span><br><span class="line"></span><br><span class="line">- 按 j 向下一行</span><br><span class="line"></span><br><span class="line">- 按 k 向上一行</span><br><span class="line"></span><br><span class="line">- 按 f 向下翻一页</span><br><span class="line"></span><br><span class="line">- 按b 向上翻一页</span><br><span class="line"></span><br><span class="line">- 按 g 到全文开头</span><br><span class="line"></span><br><span class="line">- 按 G 到全文结尾</span><br><span class="line"></span><br><span class="line">- 按 Q 退出</span><br></pre></td></tr></table></figure><h5 id="2-结果的处理"><a href="#2-结果的处理" class="headerlink" title="2)结果的处理"></a>2)结果的处理</h5><p>凡是有的打印结果的指令，我们都可以通过相关指令对应结果进行处理</p><p>######a. 管道 - |</p><p>如果需要对某一个指令的结果使用另外的指令进行二次处理的时候，就需要用到管道(|)</p><h6 id="b-sort-排序"><a href="#b-sort-排序" class="headerlink" title="b.sort    - 排序"></a>b.sort    - 排序</h6><p>sort     -  从小到大排序(将一行内容作为一个字符串，按字符串大小对应内容进行排序，默认不区分大小写)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat a.txt |sort      # 对a.txt的文件内容从小到大排序显示</span><br><span class="line"></span><br><span class="line">sort的参数:</span><br><span class="line">-r   - 逆序</span><br><span class="line">-nk 1  - 数值大小排序</span><br><span class="line">-nk 2  - 字符大小排序(默认)</span><br><span class="line"></span><br><span class="line">cat a.txt|sort -nk 1    # 对a.txt的文件内容按数字大小从小到大排序</span><br><span class="line">cat a.txt|sort -rnk 1    # 对a.txt的文件内容按数字大小从大到小排序</span><br><span class="line">cat a.txt|sort -nk 2    # 对a.txt的文件内容按字符大小从小到大排序(默认)</span><br><span class="line">cat a.txt|sort -rnk 2    # 对a.txt的文件内容按字符大小从大到小排序</span><br></pre></td></tr></table></figure><h6 id="c-uniq-去重"><a href="#c-uniq-去重" class="headerlink" title="c.uniq   -去重"></a>c.uniq   -去重</h6><p>uniq     - 只能将紧挨着的相同行去掉重复的(如果需要去掉所有重复的行，先排序将相同的行放到一起)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat a.txt|uniq     # 去掉a.txt文件内容中相邻重复的行</span><br><span class="line">cat a.txt|sort|uniq   # 去掉a.txt文件内容中所有重复的行</span><br><span class="line"></span><br><span class="line">uniq的参数</span><br><span class="line">-c     - 重复次数</span><br></pre></td></tr></table></figure><h6 id="d-awk-获取列"><a href="#d-awk-获取列" class="headerlink" title="d.awk  - 获取列"></a>d.awk  - 获取列</h6><p>awk ‘{print $N}’      -  获取内容中第N列的数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">history|awk '&#123;print $2&#125;'    # 获取历史记录第2列的内容</span><br><span class="line">history|awk '&#123;print $2,$3&#125;'  # 获取历史记录第2列和第3列的内容</span><br></pre></td></tr></table></figure><p>练习:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">history |awk '&#123;print $4&#125;' |sort |uniq ‐c | sort ‐rnk 1 | head ‐n 3    # 统计最常用的3个指令及其使用次数</span><br></pre></td></tr></table></figure><h5 id="3）输出重定向-gt-gt-gt"><a href="#3）输出重定向-gt-gt-gt" class="headerlink" title="3）输出重定向   -    &gt;/&gt;&gt;"></a>3）输出重定向   -    &gt;/&gt;&gt;</h5><p>执行有打印结果的指令  &gt;  文件地址     -  将指定指令执行的结果保存到指定文件中(先清除原文件内容再添加)</p><p>执行有打印结果的指令  &gt;&gt;  文件地址    -  将指定指令执行的结果保存到指定文件中(直接将结果追加到原文件中)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">history &gt; a.txt     #将当前历史记录直接保存到a.txt文件中</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将最常用的3个指令及其使用次数保存到a.txt文件中</span></span><br><span class="line">history |awk '&#123;print $4&#125;' |sort |uniq ‐c | sort ‐rnk 1 | head ‐n 3 &gt; a.txt</span><br></pre></td></tr></table></figure><h5 id="4-统计"><a href="#4-统计" class="headerlink" title="4)统计"></a>4)统计</h5><p>wc  -c/-w/-l   文件地址        - 统计指定文件中字符/单词/行的数量</p><h5 id="5-查找"><a href="#5-查找" class="headerlink" title="5)查找"></a>5)查找</h5><p>######grep   - 找内容</p><p>a.  grep  内容  文件地址       - 在指定文件中查找指定内容(返回文件中所有包含指定内容的行)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">grep you a.txt    # 获取a.txt中包含you的所有的行</span><br><span class="line"></span><br><span class="line">grep的参数:</span><br><span class="line">-n      - 显示结果的时候显示行号</span><br><span class="line">-i      - 查找内容的时候忽略大小写</span><br><span class="line">-E      - 按正则表达式进行匹配   </span><br><span class="line">  使用方法： grep -E '正则表达式' 文件</span><br><span class="line">  注意: Linux操作系统中正则表达式不支持:\d,\D,\w,\W,\s,\S,\b,\B; 其他语法都支持</span><br><span class="line">-v      - 忽略字段</span><br><span class="line">  grep you a.txt  -v  # 获取a.txt中不包含you的所有的行</span><br></pre></td></tr></table></figure><p>b.  执行有打印结果的指令 |grep 内容      - 在指令执行结果中查找指定内容</p><p>c. grep -r  内容 文件夹地址     -在指定文件夹中所有的文件中查找指定内容</p><p>######find   - 找文件</p><p>find  文件夹路径  -name    文件名     -  在指定文件夹下按文件名找指定文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 找指定文件名</span></span><br><span class="line">find dir1 -name 'test1.py'      # 在文件夹dir1找名字是test1.py的文件</span><br><span class="line">find dir1 -name '*.txt'         # 在文件夹dir1找后缀是txt的所有文件</span><br><span class="line">find dir1 -name 'test*.txt'</span><br><span class="line">find dir1 -name 'test*'</span><br><span class="line">find dir1 -name '*c.txt'</span><br></pre></td></tr></table></figure><p>find  文件夹路径  -size  +/-文件大小       - 在指定文件夹下找文件大小满足条件的所有的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find dir1 -size +4k       # 查找在文件夹dir1中所有大于4k的文件</span><br><span class="line">find dir1 -size -4k       # 查找在文件夹dir1中所有小于4k的文件</span><br><span class="line">find dir1 -size +5k -size -10k  # 查找在文件夹dir1中所有大于5k并且小于10k的文件(文件大小如果是小数，算的时候向上取整)</span><br><span class="line">find dir1 -size +4k -name '*.txt'   # 查找在文件夹dir1中所有大于4k的txt文件</span><br></pre></td></tr></table></figure><h6 id="查指令"><a href="#查指令" class="headerlink" title="查指令"></a>查指令</h6><p>which 指令名       -精确查找当前指令对应的文件的路径</p><p>whereis 指令名     -查找和指定指令相关的所有的文件的路径</p><p>man   指令名        -获取指定指令的使用手册</p><p>指令名   — help    -获取指定指令的帮助文档</p><p>####13.网络管理</p><p>ifconfig       - 查看网卡状态</p><p>netstat   -natp        - 查看当前系统所有的网络连接状态</p><p>netstat   -natp |grep 端口号      -  查看指定端口对应网络连接状态</p><p>ping  地址           -  给指定地址对应服务器发送数据(主要用来检测当前网络通不通)</p><p>ping -i  时间(单位秒)  地址     - 每隔指定时间ping一次(时间可以是小数)</p><p>ping  -c  次数    地址         -  ping指定次数(不限制次数的时候会不断的ping)</p><p>wget  地址        -  下载数据</p><h4 id="14-压缩和归档"><a href="#14-压缩和归档" class="headerlink" title="14.压缩和归档"></a>14.压缩和归档</h4><p>压缩可以让文件变小，一般在需要传输前都会先对文件进行压缩。注意，压缩指令只针对文件有效，并且一次只能压缩一个文件。</p><p>归档可以将一个文件夹变成一个文件(tar文件)</p><h5 id="1-归档和解归档-tar"><a href="#1-归档和解归档-tar" class="headerlink" title="1)归档和解归档   - tar"></a>1)归档和解归档   - tar</h5><p>tar  -cvf  归档文件地址   需要归档的原文件地址       -  将文件进行归档操作(既可以对文件进行归档也可以对文件夹                                               归档)</p><p>tar -xvf   归档文件地址      - 将指定的归档文件解归档</p><h5 id="2）压缩和解压-gzip-gunzip-xz"><a href="#2）压缩和解压-gzip-gunzip-xz" class="headerlink" title="2）压缩和解压: gzip,gunzip,xz"></a>2）压缩和解压: gzip,gunzip,xz</h5><h6 id="a-gzip"><a href="#a-gzip" class="headerlink" title="a.gzip"></a>a.gzip</h6><p>gzip  文件地址       -  压缩指定文件(压缩后会生成一个gz文件，并且会删除原文件)</p><p>gzip  -c  文件地址  &gt;  压缩文件地址      -  将指定文件压缩指定位置，并且保留原文件</p><p>gzip  -d  压缩文件地址    - 解压指定文件(解压完成后会删除原压缩文件)</p><p>gzip  -l  压缩文件地址     - 列出压缩文件中的内容</p><h6 id="b-gunzip"><a href="#b-gunzip" class="headerlink" title="b.gunzip"></a>b.gunzip</h6><p>gunzip  压缩文件地址     - 解压指定文件(解压完成后会删除原压缩文件)</p><h6 id="c-xz"><a href="#c-xz" class="headerlink" title="c.xz"></a>c.xz</h6><p>xz   文件地址     - 压缩指定文件(压缩文件后缀是xz)</p><p>xz   -d   压缩文件地址     - 解压指定文件</p><h3 id="15-软件安装和包管理工具"><a href="#15-软件安装和包管理工具" class="headerlink" title="15.软件安装和包管理工具"></a>15.软件安装和包管理工具</h3><p>包管理工具：yum </p><ul><li>yum search：搜索软件包，例如yum search nginx。</li><li>yum list installed：列出已经安装的软件包，例如yum list installed | grep zlib。</li><li>yum install：安装软件包，例如yum install nginx。</li><li>yum remove：删除软件包，例如yum remove nginx。</li><li>yum update：更新软件包，例如yum update可以更新所有软件包，而yum update tar只会更新tar。</li><li>yum check-update：检查有哪些可以更新的软件包。</li><li>yum info ：显示软件包的相关信息，例如yum info nginx。</li></ul><p>源代码构建安装</p><ol><li>wget  安装包的路径        -下载安装包</li><li>gunzip/tar  压缩包         - 解压、解归档</li><li>(设置安装路径)</li><li>cd 安装包目录 执行: make &amp;&amp; make install       -编译安装包程序</li><li>给可执行文件添加软连接到usr/bin目录下            -添加快捷方式</li></ol><h5 id="1-源代码构建python3-x"><a href="#1-源代码构建python3-x" class="headerlink" title="1.源代码构建python3.x"></a>1.源代码构建python3.x</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root ~]# yum install gcc     (安装编译环境)</span><br><span class="line">[root ~]# wget https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tgz    (下载安装包)</span><br><span class="line">[root ~]# gunzip Python-3.6.5.tgz     (解压)</span><br><span class="line">[root ~]# tar -xvf Python-3.6.5.tar    (解归档)</span><br><span class="line">[root ~]# cd Python-3.6.5            (进入安装包)</span><br><span class="line">[root ~]# ./configure --prefix=/usr/local/python36 --enable-optimizations   (设置安装路径)</span><br><span class="line">[root ~]# yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel    (安装相关依赖库)</span><br><span class="line">[root ~]# make &amp;&amp; make install       (编译执行安装文件)</span><br><span class="line">...</span><br><span class="line">[root ~]# ln -s /usr/local/python36/bin/python3.6 /usr/bin/python3      (给python指令文件创建快捷方式python3)</span><br><span class="line">[root ~]# python3 --version</span><br><span class="line">Python 3.6.5</span><br><span class="line">[root ~]# python3 -m pip install -U pip     (安装pip)</span><br><span class="line">[root ~]# ln -s /usr/local/python36/bin/pip /usr/bin/pip3      (给pip指令创建快捷方式pip3)</span><br><span class="line">[root ~]# pip3 --version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;a1-日常指令&quot;&gt;&lt;a href=&quot;#a1-日常指令&quot; class=&quot;headerlink&quot; title=&quot;a1.日常指令&quot;&gt;&lt;/a&gt;a1.日常指令&lt;/h2&gt;&lt;h5 id=&quot;1-cd指令-进入文件夹&quot;&gt;&lt;a href=&quot;#1-cd指令-进入文件夹&quot; class=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
