<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小马哥</title>
  
  <subtitle>因为到过地狱才知道天堂的美好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mayu123mayu.github.io/"/>
  <updated>2020-01-05T04:16:42.000Z</updated>
  <id>http://mayu123mayu.github.io/</id>
  
  <author>
    <name>2m雨天</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>01python基础语法和进制</title>
    <link href="http://mayu123mayu.github.io/2020/01/05/01python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%92%8C%E8%BF%9B%E5%88%B6/"/>
    <id>http://mayu123mayu.github.io/2020/01/05/01python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%92%8C%E8%BF%9B%E5%88%B6/</id>
    <published>2020-01-05T04:27:38.179Z</published>
    <updated>2020-01-05T04:16:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>#一.环境和快捷键语法常识<br>##1.虚拟环境和控制器<br>虚拟的环境可以根据自己的需要设定，大大的节省资源。<br><img src="https://upload-images.jianshu.io/upload_images/4956968-16924f9a16f6faa3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建环境.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4956968-9cecfa00cf7a162a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="控制台.png"></p><p>虚拟环境的管理：把虚拟的环境放到一个文件夹下<br>控制台的第一行告诉我们解释器在哪里<br><strong>Process finished with exit code 0</strong> 程序结束标志<br><strong>code 0</strong>表示程序正常  ，<strong>1</strong> 表示错误<br>#二.基础的语法<br>##1.快捷键<br>|  按键  |  功能  |<br>|  —-    |   —-   |<br>| Ctrl +/ |  注释和取消  |<br>| Ctrl +s |  保存文件  |<br>| Ctrl +c |  拷贝文件 |<br>| Ctrl +v|  粘贴文件  |<br>| Ctrl +x |  剪切文件  |<br>| Ctrl +z|  撤销操作|<br>| Ctrl +shift+z|  反撤销  |<br>| Ctrl +f| 搜索   |<br>| Ctrl +r|  替换 |<br>| Ctrl +a|  全选 |<br>| alt|  可以同时出现多个光标进行操作  |<br>##2注释<br>######1单行注释：<br>就是在文字前面加 <strong>#</strong><br>    代码中不影响编译执行的文字，不影响程序功能的文字<br>    对代码进行说明。<br>    写注释是一个好的编程的习惯<br>######2多行注释<br>python中的多行的注释加<strong>三个单引号三个双引号</strong>之间<br>##3语句<br>语句是指一行一行的代码，一条语句占一行。<br>所有的符号必须是英文状态下<br>如果一行语句想要写多条语句，必须在语句和语句之间加<strong>分号</strong><br>##4缩进<br>python中一条语句的开头，不能随便加缩进 IndentationError 缩进的错误<br>不能随便加空格或者tab<br>需要缩进必须加缩进<br>##5标识符<br>标识专门用来给函数或者是类用来命名的<br>   标识符的要求：<br>        由字母数字下划线组成，<br>        数字不能开头<br>        其实汉字，日语，韩语也可以作为标识符，<br>        但是不能这么做。<br>##6.关键字<br>在python中本身有特殊意义或者功能的标识符又叫保留字。如and,if,while,等、<br>查看关键字：<br>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> keyworld</span><br><span class="line">print(keyword.kwlist)</span><br></pre></td></tr></table></figure><br>##7.数据的类型<br> 常用的数据：<br>数字数据：<br>&emsp;在程序中直接写就行了，表示数字的大小。。2e3我乘10的三次方（科学计数法)2+5j(复数)<br>文本数据：<br>    &emsp;文本信息交字符串，需要用双单引号引起来有些数据看起来是数字其实是文本。<br>布尔数据：<br>    &emsp;用True表示真或者是肯定，用Flase,表示假或者否定。<br>其他的数据的类型：<br>    &emsp;列表(list),字典（dict）,元组(tuple),迭代器（iter）,字节（bytes）,生成器，函数（function）<br>##8.输入函数和输出函数：<br>&emsp;输入函数是input(),输出函数又叫打印函数叫做print().<br>######1print()函数：<br>&emsp;输出函数，print()打印内容以及表达式的结果。<br>&emsp;如果多个表达式的打印需要用逗号分隔开来。<br>&emsp;print()函数可以定制打印的末尾的符号和分隔符号，他们默认是间隔是空格。print(“打印的内容”，end=”“末尾的符号”，sep=”分隔的符号”)<br>######2.input()函数：<br>变量=input(“这个加提示信息:”)<br>用变量去获取从控制台输入的内容不管的是什么，都是字符串。<br>#三.进制<br>##1进制基础<br><img src="https://upload-images.jianshu.io/upload_images/4956968-85d5c88fa307429f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="二进制取余.png"></p><p>数字在编程中有四种形式的存在：十进制，二进制，八进制，十六进制。<br>|  进制  |  基数  |进位|位权|表示方式|<br>|  —-    |   —-   |——|——|————-|<br>|       十进制   |  0-9         | 逢十进一       |  从低位开始几进制就是几次幂再和每个位相乘     |       直接写    |<br>|       二进制   |  0-1       | 逢二进一       |  从低次幂开始每个位上的相乘      |       0b    |<br>|       八进制   |  0-7         | 逢八进一       |   从低位开始几进制就是几次幂再和每个位相乘     |       0o    |<br>|       十六进制   |  0-9，a-f      | 逢十六进一       |  从低次幂开始每个位上的相乘      |       0x    |<br>##2.手动换算进制<br>1.十进制转为其他的进制：<br>&emsp;转为几进制，就除以多少，取余数。<br>2.其他进制转为十进制：<br>&emsp;<strong>位权</strong>乘以相应位置上的<strong>基数</strong>，再求和<br>3.二进制转为八进制和十六进制的转换：<br>&emsp;11010112（2）—–133（8）（三位取一位421）<br>&emsp;11010112（2）—–5b（16）(四位取一位8421)<br>&emsp;0o76(8)—————111110（2）<br>&emsp;a3(16)——–10100011(2)<br>&emsp;a3(16)——-10100011(2)——-243(8)<br>&emsp;十六进制转为八进制，先转为二进制再转八进制。<br>##3.程序进制的转换<br>&emsp;二进制函数bin()<br>&emsp;八进制函数oct()<br>&emsp;十六进制函数hex()</p><p>##4.原码反码和补码<br>注：<strong>计算机在底层存储的数据只能存数字，并且存的是数字的补码</strong>。<br>######1.原码<br><strong>原码=符号位+数字对应的二进制的位（符号位是用1表示负数0表示正数）加到它的</strong>最高位<strong>上。</strong><br>10(10)——1010(2)<br>10(10)—————–00001010(十的二进制的原码)<br>-10（10）———–10001010(负10的二进制的原码)<br>为什么是八位数？<br>&emsp;<strong>答：在程序中使用内存的最小的单位就是八位</strong></p><p><strong>1bytes(字节)=8bit(位) 1kb(k)=1024bytes<br>1mb=1024kb   1G=1024M  1T=1024G</strong><br>####注意：正数的原码，反码，补码是一样的，都是原码。<br>######2.反码<br>反码就是原码的符号位不变，其他的全部取反。<br>10的原码：00001010<br>-10:10001010—-反码：1111 0101<br>10：0000 1010—-反码：0111  0101<br>######3.补码<br>&emsp;反码加一就是补码：<br>&emsp;-10（10）—1000  1010—–反码 1111<br> 0101 —–补码就是加一 ——– 1111  0110（补码）<br>##注意：为什么要用补码：<br>&emsp;<strong>为什么存补码：计算机只有加法器  只能进行加运算。</strong><br>&emsp;<strong>涉及到负数的运算，原码不能正确的运算，只能用补码</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#一.环境和快捷键语法常识&lt;br&gt;##1.虚拟环境和控制器&lt;br&gt;虚拟的环境可以根据自己的需要设定，大大的节省资源。&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/4956968-16924f9a16
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
